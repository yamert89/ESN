<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:/properties"/>
    <bean id="dataSourceMySQL"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="connectionProperties">
            <props>
                <!--<prop key="serverTimezone">SYSTEM</prop>-->
                <prop key="serverTimezone">Europe/Moscow</prop>
                <prop key="useLegacyDatetimeCode">false</prop>
                <prop key="useUnicode">true</prop>
                <prop key="characterEncoding">utf8</prop>
            </props>
        </property>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
    </bean>

    <bean id="dataSourcePostgres"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="${jdbc.postgres.url}"/>
        <property name="username" value="${jdbc.postgres.username}"/>
        <property name="password" value="${jdbc.postgres.password}"/>
    </bean>
    <bean id="dataSourcePostgres11"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/esn"/>
        <property name="username" value="postgres"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="jpaVendorAdapterMySQL" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"/>
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL57Dialect"/>
    </bean>

    <bean id="jpaVendorAdapterPostgres" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="POSTGRESQL"/>
        <property name="showSql" value="false"/>
        <property name="generateDdl" value="true"/>
        <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL10Dialect"/>
    </bean>


    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="#{'${jdbc.db_type}' eq 'mysql' ? 'dataSourceMySQL' : 'dataSourcePostgres'}"/>
        <property name="jpaVendorAdapter" ref="#{'${jdbc.db_type}' eq 'mysql' ? 'jpaVendorAdapterMySQL' : 'jpaVendorAdapterPostgres'}"/>
        <property name="packagesToScan" value="esn.entities"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.connection.CharSet">UTF-8</prop>
                <prop key="hibernate.connection.CharacterEncoding">UTF-8</prop>
                <prop key="hibernate.connection.Useunicode">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="log4j2.logger.org.hibernate.SQL">debug</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="log4j.logger.org.hibernate.SQL">trace</prop>
                <!--<prop key="hibernate.hbm2ddl.import_files">start.sql</prop>-->
                <!--<prop key="javax.persistence.schema-generation.database.action">drop-and-create</prop>

                <prop key="javax.persistence.schema-generation.create-source">script</prop>
                <prop key="javax.persistence.schema-generation.create-script-source">start.sql</prop>-->




            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="emf"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- LOGGING -->

    <bean id="dataSource" primary="true" class="net.ttddyy.dsproxy.support.ProxyDataSource">
        <property name="dataSource" ref="dataSourcePostgres"/>
        <property name="proxyConfig" ref="proxyConfig"/>

    </bean>

    <bean id="proxyConfig"
          factory-bean="proxyConfigSupport"
          factory-method="create"/>

    <bean id="proxyConfigSupport" class="net.ttddyy.dsproxy.support.ProxyConfigSpringXmlSupport">
        <property name="dataSourceName" value="my-ds"/>
        <property name="queryListener" ref="queryListener"/>
        <property name="methodListener" ref="methodListener"/>
    </bean>

    <bean id="queryListener" class="net.ttddyy.dsproxy.listener.ChainListener">
        <property name="listeners">
            <list>
                <bean class="net.ttddyy.dsproxy.listener.logging.SystemOutQueryLoggingListener"/>
            </list>
        </property>
    </bean>

    <bean id="methodListener" class="net.ttddyy.dsproxy.listener.CompositeMethodListener">
        <property name="listeners">
            <list>
                <bean class="net.ttddyy.dsproxy.listener.TracingMethodListener"/>
            </list>
        </property>
    </bean>




    <!--<bean id="orgDao" class="esn.db.OrganizationDAO"></bean>
    <bean id="userDao" class="esn.db.UserDAO"></bean>
    <bean id="departmentDao" class="esn.db.DepartmentDAO"></bean>
    <bean id="messageDao" class="esn.db.MessagesDAO-->


</beans>
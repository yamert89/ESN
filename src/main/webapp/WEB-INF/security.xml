<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="esn.viewControllers" />
    <mvc:annotation-driven />

    <!--<debug/>-->


   <!-- <http pattern="/neworg" security="none"/>-->
    <http pattern="/resources/**" security="none"/>
    <!--<http pattern="/auth" security="none"/>-->
    <http pattern="/views/service/**" security="none"/>
    <http pattern="/reg" security="none"/>

    <!--<http pattern="/postauth" security="none"/>-->
    <!--<http pattern="/**/profile" security="none"/>-->
    <!--<http pattern="/login" security="none"/>-->

   <http auto-config="false" use-expressions="true">
      <!--<intercept-url pattern="/" access="hasRole('ANONYMOUSLY')"/>
      <intercept-url pattern="/reg" access="hasRole('ANONYMOUSLY')"/>
      <intercept-url pattern="/views/service/**" access="hasRole('ANONYMOUSLY')"/>
      <intercept-url pattern="/auth" access="hasRole('ANONYMOUSLY')"/>
      <intercept-url pattern="/auth1" access="hasRole('ANONYMOUSLY')"/>-->
       <intercept-url pattern="/favicon.ico" access="permitAll" />
       <intercept-url pattern="/question" access="permitAll" />
       <intercept-url pattern="/error" access="permitAll" />
       <intercept-url pattern="/**/profile" access="permitAll" />
       <intercept-url pattern="/neworg" access="permitAll" />
       <intercept-url pattern="/auth" access="permitAll" />
       <intercept-url pattern="/stat" access="permitAll" />

       <intercept-url pattern="/" access="permitAll"/>
       <intercept-url pattern="/notice_cloud" access="permitAll"/>
       <intercept-url pattern="/notice_local" access="permitAll"/>

       <!--<intercept-url pattern="/**" access="permitAll" />  -->                           <!--убрать-->
       <intercept-url pattern="/login" access="permitAll" />
       <!--<intercept-url pattern="/**/users/**" access="hasRole('USER') or hasRole('ADMIN')"/>-->
       <!--<intercept-url pattern="/**/profile"  access="hasRole('ANONYMOUSLY') or hasRole('USER')"/>-->
      <intercept-url pattern="/**"  access="hasRole('USER') or hasRole('ADMIN')"/>
       <logout invalidate-session="true"/>





      <form-login default-target-url="/postauth"
                  always-use-default-target="true"
                  login-processing-url="/login"
                  login-page="/auth"
                  authentication-failure-url="/auth?error=true"
      />

       <csrf disabled="true"/>
       <!--<logout delete-cookies="JSESSIONID" />-->
      <!--<session-management invalid-session-url="/views/service/invalid_session.jsp" session-authentication-error-url="/views/service/error_auth.jsp"/>-->
       <remember-me key="SERV4WWB'SKM4LSDDVTBO44DCVCV.,O4" token-validity-seconds="${remember_me_timeout}"/>
      <!-- <logout delete-cookies="JSESSIONID" />-->
       <anonymous username="guest" granted-authority="ROLE_ANONYMOUSLY"/>
   </http>
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service id="userService" data-source-ref="#{'${jdbc.db_type}' eq 'mysql' ? 'dataSourceMySQL' : 'dataSourcePostgres'}"
            users-by-username-query="select login, password, true from users where login = ?"
            authorities-by-username-query="select login, authority from users where login = ?"/>
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>
   <!--<authentication-manager>
      <authentication-provider user-service-ref="myUserDetailsService">
          <password-encoder ref="passwordEncoder"/>
      </authentication-provider>
   </authentication-manager>-->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
    </beans:bean>



</beans:beans>